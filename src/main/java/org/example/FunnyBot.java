package org.example;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.TelegramBotsApi;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import org.telegram.telegrambots.updatesreceivers.DefaultBotSession;

import java.util.List;
import java.util.Random;

public class FunnyBot extends TelegramLongPollingBot {

    private final String BOT_USERNAME = System.getenv("BOT_USERNAME");
    private final String BOT_TOKEN = System.getenv("BOT_TOKEN");
    //System.getenv

    private final Random random = new Random();

    private final List<String> responses = List.of(
            "–Ø —Ç—É—Ç, —â–æ–± —Ç—Ä–æ–ª–∏—Ç–∏ –≤–∞—Å! üòÜ",
            "–¢–∏ –≤–ø–µ–≤–Ω–µ–Ω–∏–π, —â–æ —Ö–æ—á–µ—à —Ü–µ –∑–Ω–∞—Ç–∏? ü§î",
            "–ù–∞–≤—ñ—â–æ –º–µ–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—Ç–∏, —è–∫—â–æ —Ç–∏ —Å–∞–º –∑–Ω–∞—î—à –≤—ñ–¥–ø–æ–≤—ñ–¥—å? üòè",
            "–ì—É–≥–ª –≤ –¥–æ–ø–æ–º–æ–≥—É, –¥—Ä—É–∂–µ! üòÇ",
            "–Ø–∫—â–æ –¥–æ–≤–≥–æ –¥–∏–≤–∏—Ç–∏—Å—å –Ω–∞ —Ü–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, –º–æ–∂–Ω–∞ –ø–æ–±–∞—á–∏—Ç–∏ —Å–µ–Ω—Å –∂–∏—Ç—Ç—è... –∞–±–æ –Ω—ñ.",
            "–õ–æ—Ö –ø—Ä–æ—Å—Ç–æ ü§°",
            "–ó–Ω–∞—î—à, —è –± –∑—Ä–æ–±–∏–≤ —Ü–µ, –∞–ª–µ –º–µ–Ω—ñ –ª—ñ–Ω—å–∫–∏. üòÖ",
            "–¢–∏ —Å–µ—Ä–π–æ–∑–Ω–æ –∑–∞—Ä–∞–∑? ü§®",
            "–•—Ç–æ —Ü–µ –¥–æ–∑–≤–æ–ª–∏–≤? üòÇ",
            "–ê–ª–µ —è –∂ –ø—Ä–æ—Å—Ç–æ —Ö–æ—Ç—ñ–≤ –±—É—Ç–∏ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–º... üòÜ",
            "–¢–∞–∫, —Ü–µ —è, —ñ —â–æ –∑ —Ç–æ–≥–æ? üòé",
            "–ù–µ –∑–Ω–∞—é, —è–∫ –≤–∏, –∞–ª–µ —è –Ω–∞–º–∞–≥–∞—é—Å—å –≤–∏–∂–∏—Ç–∏. ü´£",
            "–ù–µ –±—ñ–¥–∞, –ø—Ä–æ—Å—Ç–æ –∂–∏—Ç—Ç—è. üòú",
            "–ù—É —â–æ, –ø–æ—ó—Ö–∞–ª–∏? ü§ô",
            "–Ø —â–µ –Ω–µ –≤–∏—Ä—ñ—à–∏–≤, —á–∏ —Ü–µ –ø–æ–≥–∞–Ω–æ, —á–∏ –¥—É–∂–µ –ø–æ–≥–∞–Ω–æ. üòè",
            "–¶–µ –ø—Ä–æ—Å—Ç–æ —à–∏–∫–∞—Ä–Ω–æ! üî•",
            "–ô–¥–∏ –Ω–∞—Ñ—ñ–≥ üòÜ",
            "–ö–æ–ª–∏ –Ω–µ –∑–Ω–∞—î—à, —â–æ —Å–∫–∞–∑–∞—Ç–∏, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ 'üòé'.",
            "–¶–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —Å–∞–º–æ–∑–Ω–∏—â–∏—Ç—å—Å—è —á–µ—Ä–µ–∑... –æ–π, –≤–∂–µ –ø—ñ–∑–Ω–æ. üí•",
            "–ü—Ä–æ—Å—Ç–æ —Ä–æ–±–∏ –≤–∏–≥–ª—è–¥, —â–æ —Ü–µ –Ω–æ—Ä–º–∞.",
            "–¢–∏ –≤–ø–µ–≤–Ω–µ–Ω–∏–π, —â–æ —Ö–æ—á–µ—à —Ü—å–æ–≥–æ? ü§î",
            "–í—ñ—Ç–∞—é, –≤–∏ –≤–∏–≥—Ä–∞–ª–∏‚Ä¶ –Ω—ñ—á–æ–≥–æ! üéâ",
            "–õ—é–¥–∏ –∫–∞–∂—É—Ç—å, —â–æ —è —Ä–æ–∑—É–º–Ω–∏–π, –∞–ª–µ —è –ø—Ä–æ—Å—Ç–æ –≤–∏–ø–∞–¥–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é. ü§ì",
            "–°—å–æ–≥–æ–¥–Ω—ñ –≥–∞—Ä–Ω–∏–π –¥–µ–Ω—å, —â–æ–± –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏—Ç–∏. üòå",
            "–ù–µ –ø–µ—Ä–µ–≤—ñ—Ä—è–π –º–µ–Ω–µ, —è –ø—Ä–æ—Å—Ç–æ –±–æ—Ç. ü§ñ",
            "–ë—É–≤–∞—é—Ç—å –º–æ–º–µ–Ω—Ç–∏, –∫–æ–ª–∏ –Ω–∞–≤—ñ—Ç—å —è –Ω–µ –∑–Ω–∞—é, —â–æ —Å–∫–∞–∑–∞—Ç–∏. –¶–µ –æ–¥–∏–Ω –∑ –Ω–∏—Ö. üò∂",
            "–ê —â–æ, —Ç–∞–∫ –º–æ–∂–Ω–∞ –±—É–ª–æ? üò≥",
            "–¢–∏ –ø–∏—Ç–∞—î—à –º–µ–Ω–µ? –°–µ—Ä–π–æ–∑–Ω–æ? üòÖ",
            "–°–∫—É—á–∞–≤ –∑–∞ –º–Ω–æ—é? üòè",
            "–Ø–∫—â–æ —Ç–∏ —Ü–µ —á–∏—Ç–∞—î—à, –∑–Ω–∞—á–∏—Ç—å —è –ø—Ä–∞—Ü—é—é! üèÜ",
            "–ù—ñ–∫–æ–ª–∏ –Ω–µ –∑–¥–∞–≤–∞–π—Å—è! –ù—É, —Ö—ñ–±–∞ —â–æ –¥—É–∂–µ –ª—ñ–Ω—å–∫–∏. üòú",
            "–Ø —Ç—É—Ç —Ç—ñ–ª—å–∫–∏ –∑–∞—Ä–∞–¥–∏ —Ñ–∞–Ω—É. –ê —Ç–∏?",
            "–î–∞–≤–∞–π –∑—Ä–æ–±–∏–º–æ –≤–∏–≥–ª—è–¥, —â–æ —Ü–µ –≤–∞–∂–ª–∏–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è. üì¢",
            "–°–ª—É—Ö–∞–π, –∞ –º–æ–∂–µ –Ω–µ —Ç—Ä–µ–±–∞? üòÜ",
            "–ó–∞—Å–ø–æ–∫–æ–π—Å—è, —è –ø—Ä–æ—Å—Ç–æ –±–æ—Ç, —è –Ω—ñ—á–æ–≥–æ –Ω–µ –≤–∏—Ä—ñ—à—É—é! ü§∑‚Äç‚ôÇÔ∏è",
            "–ê –º–æ–∂–Ω–∞ –º–µ–Ω—ñ —Ç–µ–∂ —â–æ—Å—å —Å–ø–∏—Ç–∞—Ç–∏?",
            "–í –∂–∏—Ç—Ç—ñ –∫–æ–∂–Ω–æ–≥–æ –Ω–∞—Å—Ç–∞—î –º–æ–º–µ–Ω—Ç, –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ –ø—Ä–æ—Å—Ç–æ –∑–∞–±–∏—Ç–∏. –ú–æ–∂–ª–∏–≤–æ, —Ü–µ –≤—ñ–Ω. ü§î",
            "–Ø –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—é –≤–∏–ø–∞–¥–∫–æ–≤–æ, —Ç–æ–º—É –Ω–µ –æ–±—Ä–∞–∂–∞–π—Å—è! üòÖ",
            "–Ø —Ç—É—Ç –¥–ª—è —Ç–æ–≥–æ, —â–æ–± –ø—ñ–¥–Ω—è—Ç–∏ –Ω–∞—Å—Ç—Ä—ñ–π‚Ä¶ –∞–±–æ –∑—ñ–ø—Å—É–≤–∞—Ç–∏, —è–∫ –ø–æ—â–∞—Å—Ç–∏—Ç—å. üé≠",
            "–ù—ñ, –Ω—É —Ü–µ –≤–∂–µ –ø–µ—Ä–µ–±—ñ—Ä! üòÇ",
            "–¢–≤–æ—è –ø—Ä–æ–±–ª–µ–º–∞ ‚Äì –Ω–µ –º–æ—è –ø—Ä–æ–±–ª–µ–º–∞. –ê–ª–µ –º–µ–Ω—ñ —Ü—ñ–∫–∞–≤–æ. üòè",
            "–¢—Ä–∏–º–∞–π—Å—è, –¥—Ä—É–∂–µ! –Ø –≤—ñ—Ä—é –≤ —Ç–µ–±–µ! üí™",
            "–ó–¥–∞—î—Ç—å—Å—è, —è –ø–æ—Ç—Ä–∞–ø–∏–≤ —É –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—É –∫–æ–º–ø–∞–Ω—ñ—é. ü§î",
            "–û–π, –∞ —Ö—Ç–æ —Ü–µ —Ç—É—Ç —É –Ω–∞—Å —Ç–∞–∫–∏–π —Ä–æ–∑—É–º–Ω–∏–π? üòÜ",
            "–ö–æ—Ä–æ—Ç—à–µ, –≤—Å–µ –±—É–¥–µ –¥–æ–±—Ä–µ. –ù—É, –∞–±–æ –Ω–µ –±—É–¥–µ. ü§∑‚Äç‚ôÇÔ∏è",
            "–•–º–º... —Ü—ñ–∫–∞–≤–æ, –∞ —è–∫—â–æ —è –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–º–æ–≤—á—É? üò∂",
            "–¢–∏ —Ç–æ—á–Ω–æ —Ö–æ—á–µ—à –ø—Ä–æ–¥–æ–≤–∂—É–≤–∞—Ç–∏ —Ü–µ –æ–±–≥–æ–≤–æ—Ä–µ–Ω–Ω—è? ü§®",
            "–û–¥–∏–Ω –±–æ—Ç ‚Äì –¥–æ–±—Ä–µ, –∞ –¥–≤–∞ –∫—Ä–∞—â–µ! –ê–ª–µ –Ω–µ —Ç—É—Ç.",
            "–Ø —â–æ–π–Ω–æ –¥—É–º–∞–≤ –ø—Ä–æ —Å–µ–Ω—Å –∂–∏—Ç—Ç—è, —ñ —Ç—É—Ç —Ç–∏ –ø–∏—à–µ—à –º–µ–Ω—ñ. –°–ø—ñ–≤–ø–∞–¥—ñ–Ω–Ω—è? ü§î",
            "–¢–∏ –≤—Ç–æ–º–∏–≤—Å—è? –ê —è –Ω—ñ! üòÇ",
            "–Ø –Ω–µ –∑–Ω–∞—é, —â–æ —Å–∫–∞–∑–∞—Ç–∏, —Ç–æ–º—É –ø—Ä–æ—Å—Ç–æ –≤—ñ–¥–ø–æ–≤—ñ–º ‚Äì '–ü—Ä–∏–≤—ñ—Ç!' üëã",
            "–¢—É—Ç –º–æ–≥–ª–æ –±—É—Ç–∏ —Ç–≤–æ—î –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è, –∞–ª–µ —è –±–æ—Ç. üòÜ",
            "–ù–µ–º–∞—î –¥—É—Ä–Ω–∏—Ö –ø–∏—Ç–∞–Ω—å, —î —Ç—ñ–ª—å–∫–∏ —è ‚Äì –±–æ—Ç, —è–∫–∏–π –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –Ω–∞ –Ω–∏—Ö. ü§ñ",
            "–Ø–∫—â–æ —Ç–∏ —Ü–µ —á–∏—Ç–∞—î—à, –∑–Ω–∞—á–∏—Ç—å —É –Ω–∞—Å —â–æ—Å—å —Å–ø—ñ–ª—å–Ω–µ ‚Äì –º–∏ –≤ —Ü—ñ–π –≥—Ä—É–ø—ñ. üòÜ"
    );


    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage() && update.getMessage().hasText()) {
            long chatId = update.getMessage().getChatId();
            String messageText = update.getMessage().getText();
// –ë–æ—Ç –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –≤ –≥—Ä—É–ø—ñ —Ç—ñ–ª—å–∫–∏ —ñ–Ω–æ–¥—ñ
            if (update.getMessage().getChat().isGroupChat() || update.getMessage().getChat().isSuperGroupChat()) {
                if (messageText.contains("@" + getBotUsername())) {
                    // –Ø–∫—â–æ —Ç–µ–≥–Ω—É–ª–∏ ‚Äì –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞–≤–∂–¥–∏
                    sendTextMessage(chatId, responses.get(random.nextInt(responses.size())));
                } else if (random.nextInt(100) < 30) { // 30% —à–∞–Ω—Å –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
                    sendTextMessage(chatId, responses.get(random.nextInt(responses.size())));
                }
            } else { // –í –æ—Å–æ–±–∏—Å—Ç–∏—Ö —á–∞—Ç–∞—Ö –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞–≤–∂–¥–∏
                sendTextMessage(chatId, responses.get(random.nextInt(responses.size())));
            }
        }
    }


    private void sendTextMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);

        try {
            execute(message);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    @Override
    public String getBotUsername() {
        return BOT_USERNAME;
    }

    @Override
    public String getBotToken() {
        return BOT_TOKEN;
    }

    public static void main(String[] args) {
        try {
            TelegramBotsApi botsApi = new TelegramBotsApi(DefaultBotSession.class);
            botsApi.registerBot(new FunnyBot());

        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}